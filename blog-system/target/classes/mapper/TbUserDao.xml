<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.TbUserDao">

    <resultMap type="com.blog.entity.TbUser" id="TbUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="typeId" column="type_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="token" column="token" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="offset" column="offset" jdbcType="INTEGER"/>
        <result property="limit" column="limit" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TbUserMap">
        select
          id, type_id, user_name, password, nickname, avatar, gender, address, token, create_time, update_time
        from db_xiamo_blog.tb_user
        where id = #{id}
    </select>

    <!--查询单个(通过token查询-->
    <select id="queryByToken" resultMap="TbUserMap">
        select
          id, type_id, user_name, password, nickname, avatar, gender, address, token, create_time, update_time
        from db_xiamo_blog.tb_user
        where token = #{token}
    </select>

    <!--通过用户名查询-->
    <select id="queryByUserName" resultMap="TbUserMap">
        select
          id, type_id, user_name, password, nickname, avatar, gender, address, token, create_time, update_time
        from db_xiamo_blog.tb_user
        where user_name = #{userName}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TbUserMap">
        select
          id, type_id, user_name, password, nickname, avatar, gender, address, token, create_time, update_time
        from db_xiamo_blog.tb_user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TbUserMap">
        select
        id, type_id, user_name, password, nickname, avatar, gender, address, token, create_time, update_time
        from db_xiamo_blog.tb_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="typeId != null">
                and type_id = #{typeId}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="token != null and token != ''">
                and token = #{token}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into db_xiamo_blog.tb_user(type_id, user_name, password, nickname, avatar, gender, address, token, create_time, update_time)
        values (#{typeId}, #{userName}, #{password}, #{nickname}, #{avatar}, #{gender}, #{address}, #{token}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into db_xiamo_blog.tb_user(type_id, user_name, password, nickname, avatar, gender, address, token,
        create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.typeId}, #{entity.userName}, #{entity.password}, #{entity.nickname}, #{entity.avatar},
            #{entity.gender}, #{entity.address}, #{entity.token}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into db_xiamo_blog.tb_user(type_id, user_name, password, nickname, avatar, gender, address, token,
        create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.typeId}, #{entity.userName}, #{entity.password}, #{entity.nickname}, #{entity.avatar},
            #{entity.gender}, #{entity.address}, #{entity.token}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        type_id = values(type_id) , user_name = values(user_name) , password = values(password) , nickname =
        values(nickname) , avatar = values(avatar) , gender = values(gender) , address = values(address) , token =
        values(token) , create_time = values(create_time) , update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update db_xiamo_blog.tb_user
        <set>
            <if test="typeId != null">
                type_id = #{typeId},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="token != null and token != ''">
                token = #{token},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from db_xiamo_blog.tb_user where id = #{id}
    </delete>

</mapper>